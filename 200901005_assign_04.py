# -*- coding: utf-8 -*-
"""200901005_Assign_04.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FPu7hpoe972cbM1l9glwAio0KvVZjptP
"""

# 200901005 - Mahnoor Sadiq - Os Assignment 4 
import threading

# Global variable to store the input string
input_string = ""

def input_thread():
  global input_string
  
  # Get input from the user
  input_string = input("Enter a string: ")
  
  # Notify other threads that the input has been received
  input_event.set()
  
def reverse_thread():
  # Wait for the input to be received
  input_event.wait()
  
  # Reverse the input string
  reversed_str = input_string[::-1]
  print("Reversed string:", reversed_str)
  
def capital_thread():
  # Wait for the input to be received
  input_event.wait()
  
  # Capitalize the input string
  capitalized_str = input_string.upper()
  print("Capitalized string:", capitalized_str)
  
def shift_thread():
  # Wait for the input to be received
  input_event.wait()
  
  # Shift the characters in the input string by two
  shifted_str = ""
  for ch in input_string:
    shifted_str += chr((ord(ch) + 2) % 256)
  print("Shifted string:", shifted_str)

# Create an event to notify the other threads when the input has been received
input_event = threading.Event()

# Create and start the input thread
input_t = threading.Thread(target=input_thread)
input_t.start()

# Create and start the other threads
reverse_t = threading.Thread(target=reverse_thread)
reverse_t.start()
capital_t = threading.Thread(target=capital_thread)
capital_t.start()
shift_t = threading.Thread(target=shift_thread)
shift_t.start()

# Wait for all threads to finish
input_t.join()
reverse_t.join()
capital_t.join()
shift_t.join()

# Handling Exception for Input Thread 
# Input thread
def input_thread():
  try:
    # Take string input from user
    string = input("Enter a string: ")
  except Exception as e:
    # Handle exception
    print("An error occurred:", e)
  return string


# To keep a track of states 
if input_t.is_alive():
  print("Input thread is still running")
else:
  print("Input thread has finished")